# Kickstart to deploy ESXi from DIPx automatically

vmaccepteula
rootpw VMware!23!

# Install to the first local disk, wipe existing VMFS
install --firstdisk=local --overwritevmfs

# Management network
network --bootproto=static --ip=10.0.99.2 --netmask=255.255.255.0 \
        --gateway=10.0.99.1 --nameserver=10.0.20.10 \
        --hostname=esxi01.corp.example.local

reboot

%firstboot --interpreter=busybox

# NTP
esxcli system ntp set -s 10.0.20.10
esxcli system ntp set -e true
/etc/init.d/ntpd restart

# Enable SSH & ESXi Shell (for automation)
vim-cmd hostsvc/enable_ssh
vim-cmd hostsvc/start_ssh
vim-cmd hostsvc/enable_esx_shell
vim-cmd hostsvc/start_esx_shell

# Create a dedicated vSwitch for VLANs and attach second NIC if present
ESX_NIC=$(esxcli network nic list | awk 'NR==2{print $1}')
esxcli network vswitch standard add -v vSwitchLAN 2>/dev/null || true
[ -n "$ESX_NIC" ] && esxcli network vswitch standard uplink add -v vSwitchLAN -u $ESX_NIC || true

# Port Groups (idempotent)
for item in "VLAN10-Users 10" "VLAN15-WiFi 15" "VLAN20-Servers 20" \
            "VLAN30-DMZ 30" "VLAN99-Mgmt 99"; do
  set -- $item; NAME=$1; VID=$2
  esxcli network vswitch standard portgroup add -v vSwitchLAN -p "$NAME" 2>/dev/null || true
  esxcli network vswitch standard portgroup set -p "$NAME" -v $VID
done

# USB Auto-Mount
USB_BASE=$(ls /dev/disks/ | grep -E 'mpx.vmhba32' | head -n1)
if [ -n "$USB_BASE" ]; then
  USB_P2="/dev/disks/${USB_BASE}:2"
  vmkfstools -C vmfs6 -S USB_REPO "$USB_P2" >/dev/null 2>&1 || true
  esxcli storage filesystem mount -l USB_REPO >/dev/null 2>&1 || true
fi

# Create ISO folder on local datastore
mkdir -p /vmfs/volumes/datastore1/iso
